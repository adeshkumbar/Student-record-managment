#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
#include<windows.h>
#include<string.h>
void gotoxy(int ,int );
void menu();
void add();
void view();
void search();
void edit();
void deleter();
struct student
{
    char name[20];
    char usn[10];
    int rollno;
    float cgpa;
};
int main()
{
    gotoxy(40,13);
    printf("<<<KLEIT STUDENT RECORD MANAGMENT SYSTEM>>>\n\n\n");
    printf("\n\n\n\n\t\t\t\t\tPress any key to continue");
    getch();
    menu();
    return 0;
}
void menu()
{
    int choice;
    system("cls");
    printf("\t\t\t\t\t\t\t\t\t\t**MENU\t\t\n\n\n\n\n");
    printf("\t\t\t\t\t\tEnter appropriate number to perform following task.\n\n\n\n");
    printf("\t\t\t\t\t\t\t1. Add  A New Record\n");
    printf("\t\t\t\t\t\t\t2. View Database\n");
    printf("\t\t\t\t\t\t\t3. Search specific student information\n");
    printf("\t\t\t\t\t\t\t4. Edit Database\n ");
    printf("\t\t\t\t\t\t\t5. Delete a student profile\n");
    printf("\t\t\t\t\t\t\t6. Exit.\n");
    printf("\n\n\n\n\t\t\t\t\t\t\tPlease enter your choice:");
    scanf("%d",&choice);
    switch(choice)
    {
    case 1:
        add();
        break;

    case 2:
        view();
        break;

    case 3:
        search();
        break;

    case 4:
        edit();
        break;

    case 5:
        deleter();
        break;

    case 6:
        exit(1);
        break;

    default:
        printf("\n\n\t\tInvalid Choice.");
    }
}
void add()
{
    FILE *fp;
    struct student std;
    char another ='y';
    system("cls");

    fp = fopen("f.txt","ab+");
    if(fp == NULL){
        printf("\nNO STUDENT RECORD FOUND");
        exit(1);
    }
    fflush(stdin);
    while(another == 'y')
    {
        printf("\t\t\t\t\t\t\t\t\t\t**ADD RECORD\t\t\n\n\n\n\n");
        printf("\t\t\t\t\t\tEnter Student's details-\n");
        printf("\n\t\t\t\t\t\tEnter Student's Name : ");
        gets(std.name);
        printf("\n\t\t\t\t\t\tEnter Student's USN :");
        gets(std.usn);
        printf("\n\t\t\t\t\t\tEnter Student's Roll No : ");
        scanf("%d",&std.rollno);
        fflush(stdin);
        printf("\n\t\t\t\t\t\tEnter Student's CGPA : ");
        scanf("%f",&std.cgpa);
        fflush(stdin);
        fwrite(&std,sizeof(std),1,fp);
        printf("\n\n\n\n\n\t\t\tIf you want to add another record then press 'y' or else press 'n' .");
        fflush(stdin);
  another = getch();
        system("cls");
        fflush(stdin);
    }
    fclose(fp);
    printf("\n\n\t\t\t\t\tPress any key to continue.");
    getch();
    menu();
}
void view()
{   FILE *fp;
    int i=1,j;
    struct student std;
    system("cls");
    gotoxy(10,3);
    printf("VIEW RECORD");
    gotoxy(10,5);
    printf("S.No   Name of Student       USN     Roll No      CGPA      ");
    gotoxy(10,6);
    printf("----------------------------------------------------------");
    fp = fopen("f.txt","rb+");
    if(fp == NULL){
        gotoxy(10,8);
        printf("\n\t\t\tNO STUDENT RECORD FOUND");
        exit(1);
    }
    j=8;
    while(fread(&std,sizeof(std),1,fp) == 1){
        gotoxy(10,j);
        printf("%-7d%-22s%-12s%-9d%-12f",i,std.name,std.usn,std.rollno,std.cgpa);
        i++;
        j++;
    }
    fclose(fp);
    gotoxy(10,j+3);
    printf("Press any key to continue.");
    getch();
    menu();
}
void search()
{
    FILE *fp;
    struct student std;
    char stname[20];
    system("cls");
    printf("\t\t\t\t\t\t\t\t\t\t**SEARCH RECORD\t\t\n\n\n\n\n");
    printf("\n\t\t\t\t\t\tEnter name of student you want to search : ");
    fflush(stdin);
    gets(stname);
    fp = fopen("f.txt","rb+");
    if(fp == NULL){
        printf("\nNO STUDENT RECORD FOUND");
        exit(1);
    }
    while(fread(&std,sizeof(std),1,fp ) == 1){
        if(strcmp(stname,std.name) == 0){
            printf("\n\t\t\t\t\t\tSTUDENT RECORD FOUND---");
            printf("\n\t\t\t\t\t\tName : %s",std.name);
            printf("\n\t\t\t\t\t\tUSN : %s",std.usn);
            printf("\n\t\t\t\t\t\tRoll No : %d",std.rollno);
            printf("\n\t\t\t\t\t\tCGPA : %f",std.cgpa);
        }
    }
    fclose(fp);
    printf("\n\n\n\t\t\tPress any key to continue.");
    getch();
    menu();
}
void edit()
{
    char stname[20];
    FILE *fp;
    struct student std;
    system("cls");
    printf("\t\t\t\t\t\t\t\t\t\t**EDIT RECORD\t\t\n\n\n\n\n");
    printf("\n\t\t\t\t\t\tEnter name of student whose informations has to be changed:");
    fflush(stdin);
    gets(stname);
    fp = fopen("f.txt","rb+");
    if(fp == NULL){
        printf("\nNO STUDENT RECORD FOUND");
        exit(1);
    }
    rewind(fp);
    fflush(stdin);
    while(fread(&std,sizeof(std),1,fp) == 1)
    {
        if(strcmp(stname,std.name) == 0){
            printf("\n\t\t\t\t\t\tEnter new name: ");
            gets(std.name);
            printf("\n\t\t\t\t\t\tEnter new USN : ");
            gets(std.usn);
            printf("\n\t\t\t\t\t\tEnter new roll no :");
            scanf("%d",&std.rollno);
            printf("\n\t\t\t\t\t\tEnter new CGPA : ");
            fflush(stdin);
            scanf("%f",&std.cgpa);
            fseek(fp ,-sizeof(std),SEEK_CUR);
            fwrite(&std,sizeof(std),1,fp);
            break;
        }
    }
    fclose(fp);
    printf("\n\n\n\t\t\tPress any key to continue.");
    getch();
    menu();
}
void deleter()
{
    char stname[20];
    FILE *fp,*ft;
    struct student std;
    system("cls");
    printf("\t\t\t\t\t\t\t\t\t\t**DELETE RECORD\t\t\n\n\n\n\n");
    printf("\n\t\t\t\t\t\tEnter name of student whose record has to be deleted :");
    fflush(stdin);
    gets(stname);
    fp = fopen("f.txt","rb+");
    if(fp == NULL){
        printf("\nNO STUDENT RECORD FOUND");
        exit(1);
    }
    ft = fopen("a.txt","wb+");
    if(ft == NULL){
        printf("\nNO STUDENT RECORD FOUND");
        exit(1);
    }
    while(fread(&std,sizeof(std),1,fp) == 1){
        if(strcmp(stname,std.name)!=0)
            fwrite(&std,sizeof(std),1,ft);
    }
    fclose(fp);
    fclose(ft);
    remove("f.txt");
    rename("a.txt","f.txt");
    printf("\n\n\t\t\tPress any key to continue.");
    getch();
    menu();
}
void gotoxy(int x,int y)
{
        COORD c;
        c.X=x;
        c.Y=y;
        SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE),c);
}
